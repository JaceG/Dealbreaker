require File.join(File.dirname(`node --print "require.resolve('expo/package.json')"`), "scripts/autolinking")
require File.join(File.dirname(`node --print "require.resolve('react-native/package.json')"`), "scripts/react_native_pods")

require 'json'
podfile_properties = JSON.parse(File.read(File.join(__dir__, 'Podfile.properties.json'))) rescue {}

ENV['RCT_NEW_ARCH_ENABLED'] = podfile_properties['newArchEnabled'] == 'true' ? '1' : '0'
ENV['EX_DEV_CLIENT_NETWORK_INSPECTOR'] = podfile_properties['EX_DEV_CLIENT_NETWORK_INSPECTOR']

platform :ios, podfile_properties['ios.deploymentTarget'] || '13.0'
install! 'cocoapods',
  :deterministic_uuids => false

use_modular_headers!
prepare_react_native_project!

target 'dealbreakerv2' do
  use_expo_modules!
  config = use_native_modules!

  use_react_native!(
    :path => config[:reactNativePath],
    :hermes_enabled => podfile_properties['expo.jsEngine'] == nil || podfile_properties['expo.jsEngine'] == 'hermes',
    :fabric_enabled => podfile_properties['newArchEnabled'] == 'true',
    :app_path => "#{Pod::Config.instance.installation_root}/.."
  )

  post_install do |installer|
    react_native_post_install(
      installer,
      config[:reactNativePath],
      :mac_catalyst_enabled => false
    )

    # Fix Xcode 16.4 + iOS 18.5 SDK module issues
    installer.pods_project.targets.each do |target|
      target.build_configurations.each do |config|
        config.build_settings['CLANG_ALLOW_NON_MODULAR_INCLUDES_IN_FRAMEWORK_MODULES'] = 'YES'
        config.build_settings['CLANG_ENABLE_MODULES'] = 'YES'
        config.build_settings['DEFINES_MODULE'] = 'YES'
        config.build_settings['SWIFT_COMPILATION_MODE'] = 'wholemodule'
        config.build_settings['GCC_PRECOMPILE_PREFIX_HEADER'] = 'NO'
        config.build_settings['ENABLE_STRICT_OBJC_MSGSEND'] = 'NO'
        
        # Set C++20 standard for React Native 0.76.x compatibility
        config.build_settings['CLANG_CXX_LANGUAGE_STANDARD'] = 'c++20'
        config.build_settings['GCC_C_LANGUAGE_STANDARD'] = 'gnu11'
        
        # Allow GNU extensions and Objective-C features
        config.build_settings['GCC_ENABLE_GNU_EXTENSIONS'] = 'YES'
        config.build_settings['CLANG_ENABLE_OBJC_WEAK'] = 'YES'
        
        # Fix React-RuntimeApple module map conflicts
        if target.name == 'React-RCTAppDelegate'
          # Remove React-RuntimeApple module map references
          config.build_settings['MODULEMAP_FILE'] = ''
          config.build_settings.delete('MODULEMAP_FILE[arch=*]')
        end
      end
    end

    # Clean up conflicting ReactCommon module maps after post_install
    headers_path = "#{installer.sandbox.public_headers.root}/ReactCommon"
    ["React-RuntimeApple.modulemap", "React-RuntimeApple-umbrella.h"].each do |file|
      file_path = "#{headers_path}/#{file}"
      if File.exist?(file_path)
        File.delete(file_path)
        puts "Removed conflicting #{file}"
      end
    end
    
    # Create empty React-RuntimeApple.modulemap to satisfy build system references
    empty_modulemap_path = "#{headers_path}/React-RuntimeApple.modulemap"
    File.write(empty_modulemap_path, "// Empty module map to resolve build conflicts\n")
    puts "Created empty React-RuntimeApple.modulemap"
  end
end
